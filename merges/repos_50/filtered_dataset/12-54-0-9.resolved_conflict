				outputFormat,
				outputFormatType,
				outputQuality,
				imageType,
				filters,
				new FixedResizerFactory(resizer)
		);

		validateThumbnailSize();
	}

	/**
	 * Creates an object holding the parameters needed in order to make a
	 * thumbnail.
	 *
	 * @param widthScalingFactor	The scaling factor to apply to the width
	 * 								when creating a	thumbnail from the original
	 * 								image.
	 * @param heightScalingFactor	The scaling factor to apply to the height
	 * 								when creating a	thumbnail from the original
	 * 								image.
	 * @param sourceRegion		The region of the source image to use when
	 * 							creating a thumbnail.
	 * 							A value of {@code null} indicates that the
	 * 							entire source image should be used to create
	 * 							the thumbnail.
	 * @param keepAspectRatio	Indicates whether or not the thumbnail should
	 * 							maintain the aspect ratio of the original image.
	 * @param outputFormat		A string indicating the compression format
	 * 							that should be applied on the thumbnail.
	 * 							A value of
	 * 							{@link ThumbnailParameter#ORIGINAL_FORMAT}
	 * 							should be provided if the same image format as
	 * 							the original should	be used for the thumbnail.
	 * @param outputFormatType	A string indicating the compression type that
	 * 							should be used when writing the thumbnail.
	 * 							A value of
	 * 							{@link ThumbnailParameter#DEFAULT_FORMAT_TYPE}
	 * 							should be provided if the thumbnail should be
	 * 							written using the default compression type of
	 * 							the codec specified in {@code outputFormat}.
	 * @param outputQuality		A value from {@code 0.0f} to {@code 1.0f} which
	 * 							indicates the quality setting to use for the
	 * 							compression of the thumbnail. {@code 0.0f}
	 * 							indicates the lowest quality, {@code 1.0f}
	 * 							indicates the highest quality setting for the
	 * 							compression.
	 * 							{@link ThumbnailParameter#DEFAULT_QUALITY}
	 * 							should be specified when the codec's default
	 * 							compression quality settings should be used.
	 * @param imageType 		The {@link BufferedImage} image type of the
	 * 							thumbnail.
	 * 							A value of
	 * 							{@link ThumbnailParameter#DEFAULT_IMAGE_TYPE}
	 *							should be specified when the default image
	 *							type should be used when creating the thumbnail.
	 * @param filters			The {@link ImageFilter}s to apply to the
	 * 							thumbnail.
	 * 							A value of {@code null} will be recognized as
	 * 							no filters are to be applied.
	 * 							The filters are applied after the original
	 * 							image has been resized.
	 * @param resizer			The {@link Resizer} to use when performing the
	 * 							resizing operation to create a thumbnail.
	 *
	 * @throws IllegalArgumentException 	If the scaling factor is not a
	 * 										rational number or is less than or
	 * 										equal to 0, or if the
	 * 										{@link Resizer} is null.
	 * @since	0.3.10
	 */
	public ThumbnailParameter(
			double widthScalingFactor,
			double heightScalingFactor,
			Region sourceRegion,
			boolean keepAspectRatio,
			String outputFormat,
			String outputFormatType,
			float outputQuality,
			int imageType,
			List<ImageFilter> filters,
			Resizer resizer
	)
	{
		this(
				null,
				widthScalingFactor,
				heightScalingFactor,
				sourceRegion,
				keepAspectRatio,
				outputFormat,
				outputFormatType,
				outputQuality,
				imageType,
				filters,
				new FixedResizerFactory(resizer)
		);

		validateScalingFactor();
	}

	/**
	 * Creates an object holding the parameters needed in order to make a
